{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/getReferenceNode.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["window","document","navigator","longerTimeoutBrowsers","i","length","isBrowser","userAgent","indexOf","called","Promise","resolve","then","scheduled","supportsMicroTasks","functionToCheck","getType","toString","call","element","nodeType","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","body","overflow","overflowX","overflowY","getStyleComputedProperty","test","getScrollParent","getParentNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","version","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","key","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","variation","split","commonOffsetParent","x","marginBottom","y","marginRight","hash","replace","matched","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","warn","fn","enabled","isFunction","data","state","isDestroyed","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","removeEventListeners","n","isNaN","isFinite","prop","unit","isNumeric","value","attributes","setAttribute","instance","arrowElement","arrowStyles","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","requesting","isRequired","requested","isModifierRequired","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","validPlacements","placements","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","transformProp","popperStyles","priority","check","escapeWithReference","shiftvariation","shiftOffsets","bound","hide","subtractLength","requestAnimationFrame","update","debounce","bind","Popper","Defaults","jquery","modifierOptions","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","cb"],"mappings":"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","file":"popper.min.0363ac52.js","sourceRoot":"..\\src","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}